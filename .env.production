# Production Environment Variables
# Copy this to Coolify Environment Variables

# Server Configuration
PORT=3000
HOST=0.0.0.0

# Database Configuration
# DATABASE_URL will be automatically set by Coolify
# DATABASE_URL=postgres://user:password@host:5432/database

# JWT Secret
JWT_SECRET=prod_secret_change_this_in_coolify_12345

# Storage Configuration
RECORD_DIR=/tmp/recordings
SNAPSHOT_DIR=/tmp/snapshots
STREAM_BASE_URL=http://localhost:8080/live

# Cloudflare R2 Storage Configuration
R2_ENDPOINT=https://a1000a80a775f57fe92ea14196486a3a.r2.cloudflarestorage.com
R2_ACCESS_KEY_ID=0c10ee4c19fe892894a9c5311798a69c
R2_SECRET_ACCESS_KEY=20db186ea3ebb14ba05254a9b82b1f033fef297335ab8d4e7874e90634ca36bb
R2_BUCKET_NAME=iotek
R2_PUBLIC_URL=https://iotek.tn-cdn.net
STORAGE_MODE=r2

# Snapshot Configuration
DEBUG_SNAPSHOT=0
SNAPSHOT_FALLBACK_UDP=1
FAKE_SNAPSHOT_SIZE=800x600

# Recording Configuration
FAKE_RECORD_SIZE=1280x720
FAKE_RECORD_FPS=15
FAKE_RECORD_CODEC=libx264
FAKE_RECORD_QUALITY=23
FAKE_RECORD_REALTIME=1

# PTZ Configuration
PTZ_THROTTLE_MS=300
PTZ_THROTTLE_DEBUG=0
PTZ_USE_ONVIF=0

# Debug Configuration
REFRESH_DEBUG=0

# MediaMTX Proxy Configuration (Production)
# Option 1: If MediaMTX and Camera API are on same server (use localhost)
# Option 2: If in same Docker network, use container name (e.g., mediamtx-proxy)
# Option 3: If separate servers, use internal IP or domain
MEDIAMTX_HOST=proxy-camera.teknix.services
MEDIAMTX_API_URL=http://localhost:9997
MEDIAMTX_RTSP_PORT=8554
MEDIAMTX_HLS_PORT=8888
MEDIAMTX_WEBRTC_PORT=8889
MEDIAMTX_USE_HTTPS=true
